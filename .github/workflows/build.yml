name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release Tag (e.g., v1.0.1)'
        required: true
        default: 'v1.0.1'
      release_name:
        description: 'Release Name (e.g., Release v1.0.1)'
        required: true
        default: 'Release v1.0.1'
      body:
        description: 'Release Notes'
        required: false
        default: 'Release notes for the new version.'
      draft:
        description: 'Is this a draft release? (true/false)'
        required: true
        default: 'false'
      prerelease:
        description: 'Is this a prerelease? (true/false)'
        required: true
        default: 'true'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "23"

      - name: Install dependencies
        run: npm install -d

      - name: Build project
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/*.exe
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: build
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: artifacts/
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.tag_name }}
          name: ${{ github.event.inputs.release_name }}
          body: ${{ github.event.inputs.body }}
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}
          artifacts: ${{ steps.download_artifact.outputs.download-path }}
          token: ${{ secrets.GITHUB_TOKEN }}  # Ensure the correct token is passed
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
